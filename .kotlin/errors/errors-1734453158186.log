kotlin version: 2.0.20
error message: org.jetbrains.kotlin.backend.common.BackendException: Backend Internal error: Exception during IR lowering
File being compiled: /Users/breera/AndroidStudioProjects/WeatherApp/core/src/main/java/com/breera/core/presentation/LoadImage.kt
The root cause java.lang.RuntimeException was thrown at: org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:47)
	at org.jetbrains.kotlin.backend.common.CodegenUtil.reportBackendException(CodegenUtil.kt:253)
	at org.jetbrains.kotlin.backend.common.CodegenUtil.reportBackendException$default(CodegenUtil.kt:236)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invokeSequential(performByIrFile.kt:65)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invoke(performByIrFile.kt:52)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invoke(performByIrFile.kt:38)
	at org.jetbrains.kotlin.backend.common.phaser.NamedCompilerPhase.phaseBody(CompilerPhase.kt:166)
	at org.jetbrains.kotlin.backend.common.phaser.AbstractNamedCompilerPhase.invoke(CompilerPhase.kt:113)
	at org.jetbrains.kotlin.backend.common.phaser.CompositePhase.invoke(PhaseBuilders.kt:27)
	at org.jetbrains.kotlin.backend.common.phaser.CompositePhase.invoke(PhaseBuilders.kt:14)
	at org.jetbrains.kotlin.backend.common.phaser.NamedCompilerPhase.phaseBody(CompilerPhase.kt:166)
	at org.jetbrains.kotlin.backend.common.phaser.AbstractNamedCompilerPhase.invoke(CompilerPhase.kt:113)
	at org.jetbrains.kotlin.backend.common.phaser.CompilerPhaseKt.invokeToplevel(CompilerPhase.kt:62)
	at org.jetbrains.kotlin.backend.jvm.JvmIrCodegenFactory.invokeCodegen(JvmIrCodegenFactory.kt:371)
	at org.jetbrains.kotlin.codegen.CodegenFactory.generateModule(CodegenFactory.kt:47)
	at org.jetbrains.kotlin.backend.jvm.JvmIrCodegenFactory.generateModuleInFrontendIRMode(JvmIrCodegenFactory.kt:433)
	at org.jetbrains.kotlin.cli.jvm.compiler.pipeline.JvmCompilerPipelineKt.generateCodeFromIr(jvmCompilerPipeline.kt:246)
	at org.jetbrains.kotlin.cli.jvm.compiler.pipeline.JvmCompilerPipelineKt.compileModulesUsingFrontendIrAndLightTree(jvmCompilerPipeline.kt:142)
	at org.jetbrains.kotlin.cli.jvm.K2JVMCompiler.doExecute(K2JVMCompiler.kt:148)
	at org.jetbrains.kotlin.cli.jvm.K2JVMCompiler.doExecute(K2JVMCompiler.kt:43)
	at org.jetbrains.kotlin.cli.common.CLICompiler.execImpl(CLICompiler.kt:103)
	at org.jetbrains.kotlin.cli.common.CLICompiler.execImpl(CLICompiler.kt:49)
	at org.jetbrains.kotlin.cli.common.CLITool.exec(CLITool.kt:101)
	at org.jetbrains.kotlin.incremental.IncrementalJvmCompilerRunner.runCompiler(IncrementalJvmCompilerRunner.kt:464)
	at org.jetbrains.kotlin.incremental.IncrementalJvmCompilerRunner.runCompiler(IncrementalJvmCompilerRunner.kt:73)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.doCompile(IncrementalCompilerRunner.kt:506)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compileImpl(IncrementalCompilerRunner.kt:423)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.tryCompileIncrementally$lambda$9$compile(IncrementalCompilerRunner.kt:249)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.tryCompileIncrementally(IncrementalCompilerRunner.kt:267)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compile(IncrementalCompilerRunner.kt:120)
	at org.jetbrains.kotlin.daemon.CompileServiceImplBase.execIncrementalCompiler(CompileServiceImpl.kt:675)
	at org.jetbrains.kotlin.daemon.CompileServiceImplBase.access$execIncrementalCompiler(CompileServiceImpl.kt:92)
	at org.jetbrains.kotlin.daemon.CompileServiceImpl.compile(CompileServiceImpl.kt:1660)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(Unknown Source)
	at java.rmi/sun.rmi.transport.Transport$1.run(Unknown Source)
	at java.rmi/sun.rmi.transport.Transport$1.run(Unknown Source)
	at java.base/java.security.AccessController.doPrivileged(Unknown Source)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(Unknown Source)
	at java.base/java.security.AccessController.doPrivileged(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
Caused by: java.lang.RuntimeException: Exception while generating code for:
FUN name:LoadImage-JTrpX9M visibility:public modality:FINAL <> (imageUrl:kotlin.String?, contentDescription:kotlin.String?, modifier:androidx.compose.ui.Modifier, placeholder:kotlin.Int, contentScale:androidx.compose.ui.layout.ContentScale, size:androidx.compose.ui.unit.Dp) returnType:kotlin.Unit
  annotations:
    Composable
  VALUE_PARAMETER name:imageUrl index:0 type:kotlin.String?
  VALUE_PARAMETER name:contentDescription index:1 type:kotlin.String?
  VALUE_PARAMETER name:modifier index:2 type:androidx.compose.ui.Modifier
    EXPRESSION_BODY
      ERROR_EXPR 'Default Stub' type=androidx.compose.ui.Modifier
  VALUE_PARAMETER name:placeholder index:3 type:kotlin.Int
    EXPRESSION_BODY
      ERROR_EXPR 'Default Stub' type=kotlin.Int
  VALUE_PARAMETER name:contentScale index:4 type:androidx.compose.ui.layout.ContentScale
    EXPRESSION_BODY
      ERROR_EXPR 'Default Stub' type=androidx.compose.ui.layout.ContentScale
  VALUE_PARAMETER name:size index:5 type:androidx.compose.ui.unit.Dp
    EXPRESSION_BODY
      ERROR_EXPR 'Default Stub' type=androidx.compose.ui.unit.Dp
  BLOCK_BODY
    VAR PROPERTY_DELEGATE name:imageLoadResult$delegate type:androidx.compose.runtime.MutableState<kotlin.Result<androidx.compose.ui.graphics.painter.Painter>?> [val]
      CALL 'public final fun remember <T> (calculation: @[DisallowComposableCalls] kotlin.Function0<T of androidx.compose.runtime.ComposablesKt.remember>): T of androidx.compose.runtime.ComposablesKt.remember [inline] declared in androidx.compose.runtime.ComposablesKt' type=androidx.compose.runtime.MutableState<kotlin.Result<androidx.compose.ui.graphics.painter.Painter>?> origin=null
        <T>: androidx.compose.runtime.MutableState<kotlin.Result<androidx.compose.ui.graphics.painter.Painter>?>
        calculation: BLOCK type=kotlin.Function0<androidx.compose.runtime.MutableState<kotlin.Result<androidx.compose.ui.graphics.painter.Painter>?>> origin=LAMBDA
          COMPOSITE type=kotlin.Unit origin=null
          FUNCTION_REFERENCE 'private final fun LoadImage_JTrpX9M$lambda$0 (): androidx.compose.runtime.MutableState<kotlin.Result<androidx.compose.ui.graphics.painter.Painter>?> declared in com.breera.core.presentation.LoadImageKt' type=kotlin.Function0<androidx.compose.runtime.MutableState<kotlin.Result<androidx.compose.ui.graphics.painter.Painter>?>> origin=INLINE_LAMBDA reflectionTarget=null
    VAR name:painter type:coil3.compose.AsyncImagePainter [val]
      CALL 'public final fun rememberAsyncImagePainter-UVFe2LQ$default (model: kotlin.Any?, placeholder: androidx.compose.ui.graphics.painter.Painter?, error: androidx.compose.ui.graphics.painter.Painter?, fallback: androidx.compose.ui.graphics.painter.Painter?, onLoading: kotlin.Function1<coil3.compose.AsyncImagePainter.State.Loading, kotlin.Unit>?, onSuccess: kotlin.Function1<coil3.compose.AsyncImagePainter.State.Success, kotlin.Unit>?, onError: kotlin.Function1<coil3.compose.AsyncImagePainter.State.Error, kotlin.Unit>?, contentScale: androidx.compose.ui.layout.ContentScale?, filterQuality: androidx.compose.ui.graphics.FilterQuality, $mask0: kotlin.Int, $handler: kotlin.Any?): coil3.compose.AsyncImagePainter declared in coil3.compose.SingletonAsyncImagePainterKt' type=coil3.compose.AsyncImagePainter origin=DEFAULT_DISPATCH_CALL
        model: GET_VAR 'imageUrl: kotlin.String? declared in com.breera.core.presentation.LoadImageKt.LoadImage-JTrpX9M' type=kotlin.String? origin=null
        placeholder: COMPOSITE type=androidx.compose.ui.graphics.painter.Painter? origin=DEFAULT_VALUE
          CONST Null type=androidx.compose.ui.graphics.painter.Painter? value=null
        error: COMPOSITE type=androidx.compose.ui.graphics.painter.Painter? origin=DEFAULT_VALUE
          CONST Null type=androidx.compose.ui.graphics.painter.Painter? value=null
        fallback: COMPOSITE type=androidx.compose.ui.graphics.painter.Painter? origin=DEFAULT_VALUE
          CONST Null type=androidx.compose.ui.graphics.painter.Painter? value=null
        onLoading: COMPOSITE type=kotlin.Function1<coil3.compose.AsyncImagePainter.State.Loading, kotlin.Unit>? origin=DEFAULT_VALUE
          CONST Null type=kotlin.Function1<coil3.compose.AsyncImagePainter.State.Loading, kotlin.Unit>? value=null
        onSuccess: BLOCK type=kotlin.Function1<coil3.compose.AsyncImagePainter.State.Success, kotlin.Unit> origin=LAMBDA
          COMPOSITE type=kotlin.Unit origin=null
          CALL 'public final fun <jvm-indy> <T> (dynamicCall: T of kotlin.jvm.internal.<jvm-indy>, bootstrapMethodHandle: kotlin.Any, vararg bootstrapMethodArguments: kotlin.Any): T of kotlin.jvm.internal.<jvm-indy> declared in kotlin.jvm.internal' type=kotlin.Function1<coil3.compose.AsyncImagePainter.State.Success, kotlin.Unit> origin=null
            <T>: kotlin.Function1<coil3.compose.AsyncImagePainter.State.Success, kotlin.Unit>
            dynamicCall: CALL 'public final fun invoke (p0: androidx.compose.runtime.MutableState<kotlin.Result<androidx.compose.ui.graphics.painter.Painter>?>): kotlin.Function1<coil3.compose.AsyncImagePainter.State.Success, kotlin.Unit> declared in kotlin.jvm.internal.invokeDynamic' type=kotlin.Function1<coil3.compose.AsyncImagePainter.State.Success, kotlin.Unit> origin=null
              p0: GET_VAR 'val imageLoadResult$delegate: androidx.compose.runtime.MutableState<kotlin.Result<androidx.compose.ui.graphics.painter.Painter>?> [val] declared in com.breera.core.presentation.LoadImageKt.LoadImage-JTrpX9M' type=androidx.compose.runtime.MutableState<kotlin.Result<androidx.compose.ui.graphics.painter.Painter>?> origin=null
            bootstrapMethodHandle: CALL 'public final fun <jvm-method-handle> (tag: kotlin.Int, owner: kotlin.String, name: kotlin.String, descriptor: kotlin.String, isInterface: kotlin.Boolean): kotlin.Any declared in kotlin.jvm.internal' type=kotlin.Any origin=null
              tag: CONST Int type=kotlin.Int value=6
              owner: CONST String type=kotlin.String value="java/lang/invoke/LambdaMetafactory"
              name: CONST String type=kotlin.String value="metafactory"
              descriptor: CONST String type=kotlin.String value="(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;"
              isInterface: CONST Boolean type=kotlin.Boolean value=false
            bootstrapMethodArguments: VARARG type=kotlin.Array<kotlin.Any> varargElementType=kotlin.Any
              CALL 'public final fun <jvm-original-method-type> (method: kotlin.Any): kotlin.Any declared in kotlin.jvm.internal' type=kotlin.Any origin=null
                method: RAW_FUNCTION_REFERENCE 'public abstract fun invoke (p1: P1 of kotlin.Function1): R of kotlin.Function1 [operator] declared in kotlin.Function1' type=kotlin.Any
              RAW_FUNCTION_REFERENCE 'private final fun LoadImage_JTrpX9M$lambda$3 ($imageLoadResult$delegate: androidx.compose.runtime.MutableState<kotlin.Result<androidx.compose.ui.graphics.painter.Painter>?>, it: coil3.compose.AsyncImagePainter.State.Success): kotlin.Unit? declared in com.breera.core.presentation.LoadImageKt' type=kotlin.Any
              CALL 'public final fun <jvm-original-method-type> (method: kotlin.Any): kotlin.Any declared in kotlin.jvm.internal' type=kotlin.Any origin=null
                method: RAW_FUNCTION_REFERENCE 'public abstract fun invoke (p1: coil3.compose.AsyncImagePainter.State.Success): kotlin.Unit? [fake_override,operator] declared in kotlin.jvm.internal.invokeDynamic.<fake>' type=kotlin.Any
        onError: BLOCK type=kotlin.Function1<coil3.compose.AsyncImagePainter.State.Error, kotlin.Unit> origin=LAMBDA
          COMPOSITE type=kotlin.Unit origin=null
          CALL 'public final fun <jvm-indy> <T> (dynamicCall: T of kotlin.jvm.internal.<jvm-indy>, bootstrapMethodHandle: kotlin.Any, vararg bootstrapMethodArguments: kotlin.Any): T of kotlin.jvm.internal.<jvm-indy> declared in kotlin.jvm.internal' type=kotlin.Function1<coil3.compose.AsyncImagePainter.State.Error, kotlin.Unit> origin=null
            <T>: kotlin.Function1<coil3.compose.AsyncImagePainter.State.Error, kotlin.Unit>
            dynamicCall: CALL 'public final fun invoke (p0: androidx.compose.runtime.MutableState<kotlin.Result<androidx.compose.ui.graphics.painter.Painter>?>): kotlin.Function1<coil3.compose.AsyncImagePainter.State.Error, kotlin.Unit> declared in kotlin.jvm.internal.invokeDynamic' type=kotlin.Function1<coil3.compose.AsyncImagePainter.State.Error, kotlin.Unit> origin=null
              p0: GET_VAR 'val imageLoadResult$delegate: androidx.compose.runtime.MutableState<kotlin.Result<androidx.compose.ui.graphics.painter.Painter>?> [val] declared in com.breera.core.presentation.LoadImageKt.LoadImage-JTrpX9M' type=androidx.compose.runtime.MutableState<kotlin.Result<androidx.compose.ui.graphics.painter.Painter>?> origin=null
            bootstrapMethodHandle: CALL 'public final fun <jvm-method-handle> (tag: kotlin.Int, owner: kotlin.String, name: kotlin.String, descriptor: kotlin.String, isInterface: kotlin.Boolean): kotlin.Any declared in kotlin.jvm.internal' type=kotlin.Any origin=null
              tag: CONST Int type=kotlin.Int value=6
              owner: CONST String type=kotlin.String value="java/lang/invoke/LambdaMetafactory"
              name: CONST String type=kotlin.String value="metafactory"
              descriptor: CONST String type=kotlin.String value="(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;"
              isInterface: CONST Boolean type=kotlin.Boolean value=false
            bootstrapMethodArguments: VARARG type=kotlin.Array<kotlin.Any> varargElementType=kotlin.Any
              CALL 'public final fun <jvm-original-method-type> (method: kotlin.Any): kotlin.Any declared in kotlin.jvm.internal' type=kotlin.Any origin=null
                method: RAW_FUNCTION_REFERENCE 'public abstract fun invoke (p1: P1 of kotlin.Function1): R of kotlin.Function1 [operator] declared in kotlin.Function1' type=kotlin.Any
              RAW_FUNCTION_REFERENCE 'private final fun LoadImage_JTrpX9M$lambda$4 ($imageLoadResult$delegate: androidx.compose.runtime.MutableState<kotlin.Result<androidx.compose.ui.graphics.painter.Painter>?>, it: coil3.compose.AsyncImagePainter.State.Error): kotlin.Unit? declared in com.breera.core.presentation.LoadImageKt' type=kotlin.Any
              CALL 'public final fun <jvm-original-method-type> (method: kotlin.Any): kotlin.Any declared in kotlin.jvm.internal' type=kotlin.Any origin=null
                method: RAW_FUNCTION_REFERENCE 'public abstract fun invoke (p1: coil3.compose.AsyncImagePainter.State.Error): kotlin.Unit? [fake_override,operator] declared in kotlin.jvm.internal.invokeDynamic.<fake>' type=kotlin.Any
        contentScale: COMPOSITE type=androidx.compose.ui.layout.ContentScale? origin=DEFAULT_VALUE
          CONST Null type=androidx.compose.ui.layout.ContentScale? value=null
        filterQuality: COMPOSITE type=androidx.compose.ui.graphics.FilterQuality origin=DEFAULT_VALUE
          CALL 'public final fun <unsafe-coerce> <T, R> (v: T of kotlin.jvm.internal.<unsafe-coerce>): R of kotlin.jvm.internal.<unsafe-coerce> declared in kotlin.jvm.internal' type=androidx.compose.ui.graphics.FilterQuality origin=null
            <T>: kotlin.Int
            <R>: androidx.compose.ui.graphics.FilterQuality
            v: CONST Int type=kotlin.Int value=0
        $mask0: CONST Int type=kotlin.Int value=414
        $handler: CONST Null type=kotlin.Any? value=null
    BLOCK type=kotlin.Unit origin=WHEN
      VAR name:result type:kotlin.Result<androidx.compose.ui.graphics.painter.Painter>? [val]
        CALL 'private final fun LoadImage_JTrpX9M$lambda$1 ($imageLoadResult$delegate: androidx.compose.runtime.MutableState<kotlin.Result<androidx.compose.ui.graphics.painter.Painter>?>): kotlin.Result<androidx.compose.ui.graphics.painter.Painter>? declared in com.breera.core.presentation.LoadImageKt' type=kotlin.Result<androidx.compose.ui.graphics.painter.Painter>? origin=GET_LOCAL_PROPERTY
          $imageLoadResult$delegate: GET_VAR 'val imageLoadResult$delegate: androidx.compose.runtime.MutableState<kotlin.Result<androidx.compose.ui.graphics.painter.Painter>?> [val] declared in com.breera.core.presentation.LoadImageKt.LoadImage-JTrpX9M' type=androidx.compose.runtime.MutableState<kotlin.Result<androidx.compose.ui.graphics.painter.Painter>?> origin=null
      WHEN type=kotlin.Unit origin=WHEN
        BRANCH
          if: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EQEQ
            arg0: GET_VAR 'val result: kotlin.Result<androidx.compose.ui.graphics.painter.Painter>? [val] declared in com.breera.core.presentation.LoadImageKt.LoadImage-JTrpX9M' type=kotlin.Result<androidx.compose.ui.graphics.painter.Painter>? origin=null
            arg1: CONST Null type=kotlin.Nothing? value=null
          then: BLOCK type=kotlin.Unit origin=null
            BLOCK type=kotlin.Unit origin=ARGUMENTS_REORDERING_FOR_CALL
              VAR IR_TEMPORARY_VARIABLE name:tmp0_color type:androidx.compose.ui.graphics.Color [val]
                CALL 'public final fun getBlack-0d7_KjU (): androidx.compose.ui.graphics.Color declared in androidx.compose.ui.graphics.Color.Companion' type=androidx.compose.ui.graphics.Color origin=GET_PROPERTY
                  $this: GET_FIELD 'FIELD FIELD_FOR_OBJECT_INSTANCE name:Companion type:androidx.compose.ui.graphics.Color.Companion visibility:public [final,static] declared in androidx.compose.ui.graphics.Color' type=androidx.compose.ui.graphics.Color.Companion origin=null
              VAR IR_TEMPORARY_VARIABLE name:tmp1_modifier type:androidx.compose.ui.Modifier [val]
                CALL 'public final fun size-3ABfNKs (size: androidx.compose.ui.unit.Dp): androidx.compose.ui.Modifier declared in androidx.compose.foundation.layout.SizeKt' type=androidx.compose.ui.Modifier origin=null
                  $receiver: GET_VAR 'modifier: androidx.compose.ui.Modifier declared in com.breera.core.presentation.LoadImageKt.LoadImage-JTrpX9M' type=androidx.compose.ui.Modifier origin=null
                  size: GET_VAR 'size: androidx.compose.ui.unit.Dp declared in com.breera.core.presentation.LoadImageKt.LoadImage-JTrpX9M' type=androidx.compose.ui.unit.Dp origin=null
              CALL 'public final fun CircularProgressIndicator-piYsEVY$default (modifier: androidx.compose.ui.Modifier?, color: androidx.compose.ui.graphics.Color, strokeWidth: androidx.compose.ui.unit.Dp, trackColor: androidx.compose.ui.graphics.Color, strokeCap: androidx.compose.ui.graphics.StrokeCap, $mask0: kotlin.Int, $handler: kotlin.Any?): kotlin.Unit declared in androidx.compose.material3.ProgressIndicatorKt' type=kotlin.Unit origin=DEFAULT_DISPATCH_CALL
                modifier: GET_VAR 'val tmp1_modifier: androidx.compose.ui.Modifier [val] declared in com.breera.core.presentation.LoadImageKt.LoadImage-JTrpX9M' type=androidx.compose.ui.Modifier origin=null
                color: GET_VAR 'val tmp0_color: androidx.compose.ui.graphics.Color [val] declared in com.breera.core.presentation.LoadImageKt.LoadImage-JTrpX9M' type=androidx.compose.ui.graphics.Color origin=null
                strokeWidth: COMPOSITE type=androidx.compose.ui.unit.Dp origin=DEFAULT_VALUE
                  CALL 'public final fun <unsafe-coerce> <T, R> (v: T of kotlin.jvm.internal.<unsafe-coerce>): R of kotlin.jvm.internal.<unsafe-coerce> declared in kotlin.jvm.internal' type=androidx.compose.ui.unit.Dp origin=null
                    <T>: kotlin.Float
                    <R>: androidx.compose.ui.unit.Dp
                    v: CONST Float type=kotlin.Float value=0.0
                trackColor: COMPOSITE type=androidx.compose.ui.graphics.Color origin=DEFAULT_VALUE
                  CALL 'public final fun <unsafe-coerce> <T, R> (v: T of kotlin.jvm.internal.<unsafe-coerce>): R of kotlin.jvm.internal.<unsafe-coerce> declared in kotlin.jvm.internal' type=androidx.compose.ui.graphics.Color origin=null
                    <T>: kotlin.Long
                    <R>: androidx.compose.ui.graphics.Color
                    v: CONST Long type=kotlin.Long value=0
                strokeCap: COMPOSITE type=androidx.compose.ui.graphics.StrokeCap origin=DEFAULT_VALUE
                  CALL 'public final fun <unsafe-coerce> <T, R> (v: T of kotlin.jvm.internal.<unsafe-coerce>): R of kotlin.jvm.internal.<unsafe-coerce> declared in kotlin.jvm.internal' type=androidx.compose.ui.graphics.StrokeCap origin=null
                    <T>: kotlin.Int
                    <R>: androidx.compose.ui.graphics.StrokeCap
                    v: CONST Int type=kotlin.Int value=0
                $mask0: CONST Int type=kotlin.Int value=28
                $handler: CONST Null type=kotlin.Any? value=null
        BRANCH
          if: CONST Boolean type=kotlin.Boolean value=true
          then: BLOCK type=kotlin.Unit origin=null
            BLOCK type=kotlin.Unit origin=ARGUMENTS_REORDERING_FOR_CALL
              VAR IR_TEMPORARY_VARIABLE name:tmp2_painter type:androidx.compose.ui.graphics.painter.Painter [val]
                WHEN type=androidx.compose.ui.graphics.painter.Painter origin=IF
                  BRANCH
                    if: CALL 'public final fun isSuccess-impl (arg0: kotlin.Result<T of kotlin.Result>): kotlin.Boolean declared in kotlin.Result' type=kotlin.Boolean origin=GET_PROPERTY
                      arg0: GET_VAR 'val result: kotlin.Result<androidx.compose.ui.graphics.painter.Painter>? [val] declared in com.breera.core.presentation.LoadImageKt.LoadImage-JTrpX9M' type=kotlin.Result<androidx.compose.ui.graphics.painter.Painter>? origin=null
                    then: GET_VAR 'val painter: coil3.compose.AsyncImagePainter [val] declared in com.breera.core.presentation.LoadImageKt.LoadImage-JTrpX9M' type=coil3.compose.AsyncImagePainter origin=null
                  BRANCH
                    if: CONST Boolean type=kotlin.Boolean value=true
                    then: CALL 'public final fun painterResource (id: kotlin.Int): androidx.compose.ui.graphics.painter.Painter declared in androidx.compose.ui.res.PainterResources_androidKt' type=androidx.compose.ui.graphics.painter.Painter origin=null
                      id: GET_VAR 'placeholder: kotlin.Int declared in com.breera.core.presentation.LoadImageKt.LoadImage-JTrpX9M' type=kotlin.Int origin=null
              VAR IR_TEMPORARY_VARIABLE name:tmp3_contentScale type:androidx.compose.ui.layout.ContentScale [val]
                WHEN type=androidx.compose.ui.layout.ContentScale origin=IF
                  BRANCH
                    if: CALL 'public final fun isSuccess-impl (arg0: kotlin.Result<T of kotlin.Result>): kotlin.Boolean declared in kotlin.Result' type=kotlin.Boolean origin=GET_PROPERTY
                      arg0: GET_VAR 'val result: kotlin.Result<androidx.compose.ui.graphics.painter.Painter>? [val] declared in com.breera.core.presentation.LoadImageKt.LoadImage-JTrpX9M' type=kotlin.Result<androidx.compose.ui.graphics.painter.Painter>? origin=null
                    then: GET_VAR 'contentScale: androidx.compose.ui.layout.ContentScale declared in com.breera.core.presentation.LoadImageKt.LoadImage-JTrpX9M' type=androidx.compose.ui.layout.ContentScale origin=null
                  BRANCH
                    if: CONST Boolean type=kotlin.Boolean value=true
                    then: CALL 'public final fun <get-Fit> (): androidx.compose.ui.layout.ContentScale declared in androidx.compose.ui.layout.ContentScale.Companion' type=androidx.compose.ui.layout.ContentScale origin=GET_PROPERTY
                      $this: GET_FIELD 'FIELD FIELD_FOR_OBJECT_INSTANCE name:Companion type:androidx.compose.ui.layout.ContentScale.Companion visibility:public [final,static] declared in androidx.compose.ui.layout.ContentScale' type=androidx.compose.ui.layout.ContentScale.Companion origin=null
              VAR IR_TEMPORARY_VARIABLE name:tmp4_modifier type:androidx.compose.ui.Modifier [val]
                CALL 'public final fun size-3ABfNKs (size: androidx.compose.ui.unit.Dp): androidx.compose.ui.Modifier declared in androidx.compose.foundation.layout.SizeKt' type=androidx.compose.ui.Modifier origin=null
                  $receiver: GET_VAR 'modifier: androidx.compose.ui.Modifier declared in com.breera.core.presentation.LoadImageKt.LoadImage-JTrpX9M' type=androidx.compose.ui.Modifier origin=null
                  size: GET_VAR 'size: androidx.compose.ui.unit.Dp declared in com.breera.core.presentation.LoadImageKt.LoadImage-JTrpX9M' type=androidx.compose.ui.unit.Dp origin=null
              CALL 'public final fun Image$default (painter: androidx.compose.ui.graphics.painter.Painter, contentDescription: kotlin.String?, modifier: androidx.compose.ui.Modifier?, alignment: androidx.compose.ui.Alignment?, contentScale: androidx.compose.ui.layout.ContentScale?, alpha: kotlin.Float, colorFilter: androidx.compose.ui.graphics.ColorFilter?, $mask0: kotlin.Int, $handler: kotlin.Any?): kotlin.Unit declared in androidx.compose.foundation.ImageKt' type=kotlin.Unit origin=DEFAULT_DISPATCH_CALL
                painter: GET_VAR 'val tmp2_painter: androidx.compose.ui.graphics.painter.Painter [val] declared in com.breera.core.presentation.LoadImageKt.LoadImage-JTrpX9M' type=androidx.compose.ui.graphics.painter.Painter origin=null
                contentDescription: GET_VAR 'contentDescription: kotlin.String? declared in com.breera.core.presentation.LoadImageKt.LoadImage-JTrpX9M' type=kotlin.String? origin=null
                modifier: GET_VAR 'val tmp4_modifier: androidx.compose.ui.Modifier [val] declared in com.breera.core.presentation.LoadImageKt.LoadImage-JTrpX9M' type=androidx.compose.ui.Modifier origin=null
                alignment: COMPOSITE type=androidx.compose.ui.Alignment? origin=DEFAULT_VALUE
                  CONST Null type=androidx.compose.ui.Alignment? value=null
                contentScale: GET_VAR 'val tmp3_contentScale: androidx.compose.ui.layout.ContentScale [val] declared in com.breera.core.presentation.LoadImageKt.LoadImage-JTrpX9M' type=androidx.compose.ui.layout.ContentScale origin=null
                alpha: COMPOSITE type=kotlin.Float origin=DEFAULT_VALUE
                  CONST Float type=kotlin.Float value=0.0
                colorFilter: COMPOSITE type=androidx.compose.ui.graphics.ColorFilter? origin=DEFAULT_VALUE
                  CONST Null type=androidx.compose.ui.graphics.ColorFilter? value=null
                $mask0: CONST Int type=kotlin.Int value=104
                $handler: CONST Null type=kotlin.Any? value=null

	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:47)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate$default(FunctionCodegen.kt:40)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generateMethodNode(ClassCodegen.kt:406)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generateMethod(ClassCodegen.kt:423)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generate(ClassCodegen.kt:168)
	at org.jetbrains.kotlin.backend.jvm.FileCodegen.lower(JvmPhases.kt:39)
	at org.jetbrains.kotlin.backend.common.phaser.PhaseFactoriesKt.createFilePhase$lambda$4(PhaseFactories.kt:71)
	at org.jetbrains.kotlin.backend.common.phaser.PhaseBuildersKt$createSimpleNamedCompilerPhase$1.phaseBody(PhaseBuilders.kt:69)
	at org.jetbrains.kotlin.backend.common.phaser.SimpleNamedCompilerPhase.phaseBody(CompilerPhase.kt:226)
	at org.jetbrains.kotlin.backend.common.phaser.AbstractNamedCompilerPhase.invoke(CompilerPhase.kt:113)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invokeSequential(performByIrFile.kt:62)
	... 46 more
Caused by: org.jetbrains.kotlin.codegen.CompilationException: Back-end (JVM) Internal error: Couldn't inline method call: CALL 'public final fun remember <T> (calculation: @[DisallowComposableCalls] kotlin.Function0<T of androidx.compose.runtime.ComposablesKt.remember>): T of androidx.compose.runtime.ComposablesKt.remember [inline] declared in androidx.compose.runtime.ComposablesKt' type=androidx.compose.runtime.MutableState<kotlin.Result<androidx.compose.ui.graphics.painter.Painter>?> origin=null
Method: null
File is unknown
The root cause java.lang.IllegalStateException was thrown at: org.jetbrains.kotlin.codegen.inline.SourceCompilerForInlineKt.getMethodNode(SourceCompilerForInline.kt:118)
	at org.jetbrains.kotlin.codegen.inline.InlineCodegen.performInline(InlineCodegen.kt:65)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrInlineCodegen.genInlineCall(IrInlineCodegen.kt:163)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrInlineCallGenerator.genCall(IrInlineCallGenerator.kt:36)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitCall(ExpressionCodegen.kt:653)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitCall(ExpressionCodegen.kt:138)
	at org.jetbrains.kotlin.ir.expressions.IrCall.accept(IrCall.kt:24)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitVariable(ExpressionCodegen.kt:790)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitVariable(ExpressionCodegen.kt:138)
	at org.jetbrains.kotlin.ir.declarations.IrVariable.accept(IrVariable.kt:36)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitStatementContainer(ExpressionCodegen.kt:579)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitBlockBody(ExpressionCodegen.kt:584)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitBlockBody(ExpressionCodegen.kt:138)
	at org.jetbrains.kotlin.ir.expressions.IrBlockBody.accept(IrBlockBody.kt:20)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.generate(ExpressionCodegen.kt:240)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.doGenerate(FunctionCodegen.kt:123)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:44)
	... 56 more
Caused by: java.lang.IllegalStateException: couldn't find inline method Landroidx/compose/runtime/ComposablesKt;.remember(Lkotlin/jvm/functions/Function0;)Ljava/lang/Object;
	at org.jetbrains.kotlin.codegen.inline.SourceCompilerForInlineKt.getMethodNode(SourceCompilerForInline.kt:118)
	at org.jetbrains.kotlin.codegen.inline.SourceCompilerForInlineKt.loadCompiledInlineFunction(SourceCompilerForInline.kt:96)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrSourceCompilerForInline.compileInlineFunction(IrSourceCompilerForInline.kt:91)
	at org.jetbrains.kotlin.codegen.inline.InlineCodegen.compileInline(InlineCodegen.kt:43)
	at org.jetbrains.kotlin.codegen.inline.InlineCodegen.performInline(InlineCodegen.kt:51)
	... 71 more


